{
    "docs": [
        {
            "location": "/", 
            "text": "TaxonKit - Cross-platform and Efficient NCBI Taxonomy Toolkit\n\n\nDocuments:\n \nhttp://bioinf.shenwei.me/taxonkit\n\n(\nUsage\n,\n\nTutorial\n)\n\n\nSource code:\n \nhttps://github.com/shenwei356/taxonkit\n\n\n\n\n\n\nLatest version:\n \n\n\n\n\nSubcommands\n\n\n\n\nlist\n    list taxon tree of given taxon IDs\n\n\n\n\nInstallation\n\n\nGo to \nDownload Page\n for more download options and changelogs.\n\n\nTaxonKit\n is implemented in \nGo\n programming language,\n executable binary files \nfor most popular operating systems\n are freely available\n  in \nrelease\n page.\n\n\nJust \ndownload\n compressed\nexecutable file of your operating system,\nand uncompress it with \ntar -zxvf *.tar.gz\n command or other tools.\nAnd then:\n\n\n\n\n\n\nFor Linux-like systems\n\n\n\n\n\n\nIf you have root privilege simply copy it to \n/usr/local/bin\n:\n\n\nsudo cp taxonkit /usr/local/bin/\n\n\n\n\n\n\n\nOr add the directory of the executable file to environment variable\n\nPATH\n:\n\n\necho export PATH=\\$PATH:/PATH/OF/taxonkit \n ~/.bashrc\n\n\n\n\n\n\n\n\n\n\n\nFor windows\n, just copy \ntaxonkit.exe\n to \nC:\\WINDOWS\\system32\n.\n\n\n\n\n\n\nFor Go developer, just one command:\n\n\ngo get -u github.com/shenwei356/taxonkit/taxonkit\n\n\n\nContact\n\n\nEmail me for any problem when using taxonkit. shenwei356(at)gmail.com\n\n\nCreate an issue\n to report bugs,\npropose new functions or ask for help.\n\n\nLicense\n\n\nMIT License", 
            "title": "Home"
        }, 
        {
            "location": "/#taxonkit-cross-platform-and-efficient-ncbi-taxonomy-toolkit", 
            "text": "Documents:   http://bioinf.shenwei.me/taxonkit \n( Usage , Tutorial )  Source code:   https://github.com/shenwei356/taxonkit    Latest version:", 
            "title": "TaxonKit - Cross-platform and Efficient NCBI Taxonomy Toolkit"
        }, 
        {
            "location": "/#subcommands", 
            "text": "list     list taxon tree of given taxon IDs", 
            "title": "Subcommands"
        }, 
        {
            "location": "/#installation", 
            "text": "Go to  Download Page  for more download options and changelogs.  TaxonKit  is implemented in  Go  programming language,\n executable binary files  for most popular operating systems  are freely available\n  in  release  page.  Just  download  compressed\nexecutable file of your operating system,\nand uncompress it with  tar -zxvf *.tar.gz  command or other tools.\nAnd then:    For Linux-like systems    If you have root privilege simply copy it to  /usr/local/bin :  sudo cp taxonkit /usr/local/bin/    Or add the directory of the executable file to environment variable PATH :  echo export PATH=\\$PATH:/PATH/OF/taxonkit   ~/.bashrc      For windows , just copy  taxonkit.exe  to  C:\\WINDOWS\\system32 .    For Go developer, just one command:  go get -u github.com/shenwei356/taxonkit/taxonkit", 
            "title": "Installation"
        }, 
        {
            "location": "/#contact", 
            "text": "Email me for any problem when using taxonkit. shenwei356(at)gmail.com  Create an issue  to report bugs,\npropose new functions or ask for help.", 
            "title": "Contact"
        }, 
        {
            "location": "/#license", 
            "text": "MIT License", 
            "title": "License"
        }, 
        {
            "location": "/download/", 
            "text": "Download\n\n\nTaxonKit\n is implemented in \nGo\n programming language,\n executable binary files \nfor most popular operating system\n are freely available\n  in \nrelease\n page.\n\n\nCurrent Version\n\n\nTaxonKit v0.1.1\n\n\n\n\n\n\nadd feature of \ntaxonkit list\n, users can choose output in readable JSON\n format by flag \n--json\n so the taxonomy tree could be collapse and\n uncollapse in modern text editor.\n\n\n\n\nLinks:\n\n\n\n\nLinux\n\n\n\n\ntaxonkit_linux_386.tar.gz\n\n\n\n\ntaxonkit_linux_amd64.tar.gz\n\n\n\n\n\n\nMac OS X\n\n\n\n  \ntaxonkit_darwin_386.tar.gz\n\n\n\n  \ntaxonkit_darwin_amd64.tar.gz\n\n\n\n\n\n\nWindows\n\n\n\n\ntaxonkit_windows_386.exe.tar.gz\n\n\n\n\ntaxonkit_windows_amd64.exe.tar.gz\n\n\n\n\n\n\n\n\nInstallation\n\n\nDownload Page\n\n\nTaxonKit\n is implemented in \nGo\n programming language,\n executable binary files \nfor most popular operating systems\n are freely available\n  in \nrelease\n page.\n\n\nJust \ndownload\n compressed\nexecutable file of your operating system,\nand uncompress it with \ntar -zxvf *.tar.gz\n command or other tools.\nAnd then:\n\n\n\n\n\n\nFor Linux-like systems\n\n\n\n\n\n\nIf you have root privilege simply copy it to \n/usr/local/bin\n:\n\n\nsudo cp taxonkit /usr/local/bin/\n\n\n\n\n\n\n\nOr add the directory of the executable file to environment variable\n\nPATH\n:\n\n\necho export PATH=\\$PATH:/PATH/OF/taxonkit \n ~/.bashrc\n\n\n\n\n\n\n\n\n\n\n\nFor windows\n, just copy \ntaxonkit.exe\n to \nC:\\WINDOWS\\system32\n.\n\n\n\n\n\n\nFor Go developer, just one command:\n\n\ngo get -u github.com/shenwei356/taxonkit/taxonkit\n\n\n\nPrevious Versions\n\n\n\n\nTaxonKit v0.1\n\n\n\n\nfirst release\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.\n*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/\n/*\nvar disqus_config = function () {\nthis.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable\nthis.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable\n};\n*/\n(function() { // DON'T EDIT BELOW THIS LINE\nvar d = document, s = d.createElement('script');\ns.src = '//taxonkit.disqus.com/embed.js';\ns.setAttribute('data-timestamp', +new Date());\n(d.head || d.body).appendChild(s);\n})();\n\n\n\n\nPlease enable JavaScript to view the \ncomments powered by Disqus.", 
            "title": "Download"
        }, 
        {
            "location": "/download/#download", 
            "text": "TaxonKit  is implemented in  Go  programming language,\n executable binary files  for most popular operating system  are freely available\n  in  release  page.", 
            "title": "Download"
        }, 
        {
            "location": "/download/#current-version", 
            "text": "TaxonKit v0.1.1    add feature of  taxonkit list , users can choose output in readable JSON\n format by flag  --json  so the taxonomy tree could be collapse and\n uncollapse in modern text editor.   Links:   Linux   taxonkit_linux_386.tar.gz   taxonkit_linux_amd64.tar.gz    Mac OS X  \n   taxonkit_darwin_386.tar.gz  \n   taxonkit_darwin_amd64.tar.gz    Windows   taxonkit_windows_386.exe.tar.gz   taxonkit_windows_amd64.exe.tar.gz", 
            "title": "Current Version"
        }, 
        {
            "location": "/download/#installation", 
            "text": "Download Page  TaxonKit  is implemented in  Go  programming language,\n executable binary files  for most popular operating systems  are freely available\n  in  release  page.  Just  download  compressed\nexecutable file of your operating system,\nand uncompress it with  tar -zxvf *.tar.gz  command or other tools.\nAnd then:    For Linux-like systems    If you have root privilege simply copy it to  /usr/local/bin :  sudo cp taxonkit /usr/local/bin/    Or add the directory of the executable file to environment variable PATH :  echo export PATH=\\$PATH:/PATH/OF/taxonkit   ~/.bashrc      For windows , just copy  taxonkit.exe  to  C:\\WINDOWS\\system32 .    For Go developer, just one command:  go get -u github.com/shenwei356/taxonkit/taxonkit", 
            "title": "Installation"
        }, 
        {
            "location": "/download/#previous-versions", 
            "text": "TaxonKit v0.1   first release      \n\n/**\n*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.\n*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/\n/*\nvar disqus_config = function () {\nthis.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable\nthis.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable\n};\n*/\n(function() { // DON'T EDIT BELOW THIS LINE\nvar d = document, s = d.createElement('script');\ns.src = '//taxonkit.disqus.com/embed.js';\ns.setAttribute('data-timestamp', +new Date());\n(d.head || d.body).appendChild(s);\n})();  Please enable JavaScript to view the  comments powered by Disqus.", 
            "title": "Previous Versions"
        }, 
        {
            "location": "/usage/", 
            "text": "Usage and Examples\n\n\nBefore use\n\n\nPlease download and uncompress these files:\n\n\n\n\nftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz\n\n\n\n\ntaxonkit\n\n\nUsage\n\n\nTaxonKit - NCBI Taxonomy Toolkit\n\nVersion: 0.1.1\n\nAuthor: Wei Shen \nshenwei356@gmail.com\n\n\nSource code: https://github.com/shenwei356/taxonkit\n\nDataset:\n\n    Please download and uncompress these files:\n    ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz\n\nUsage:\n  TaxonKit [command]\n\nAvailable Commands:\n  list        list taxon tree of given taxon IDs\n  version     print version information and check for update\n\nFlags:\n  -o, --out-file string   out file (\n-\n for stdout, suffix .gz for gzipped out) (default \n-\n)\n  -j, --threads int       number of CPUs. (default value: 1 for single-CPU PC, 2 for others) (default 2)\n\nUse \nTaxonKit [command] --help\n for more information about a command.\n\n\n\n\n\nlist\n\n\nUsage\n\n\nlist taxon tree of given taxon IDs\n\nUsage:\n  taxonkit list [flags]\n\nFlags:\n      --ids string      taxon ID(s), multiple IDs should be seperated by comma (default \n1\n)\n      --indent string   indent (default \n  \n)\n      --json            output in JSON format. you can save the result in file with suffix \n.json\n and open with modern text editor\n      --names string    names.dmp file, when it given taxid will be followed by its scientific name\n      --nodes string    nodes.dmp file (default \nnodes.dmp\n)\n\n\n\n\n\nExamples\n\n\n\n\n\n\nDefault usage\n\n\n$ taxonkit list --nodes nodes.dmp --ids 9605,239934\n9605\n  9606\n    63221\n    741158\n  1425170\n\n239934\n  239935\n    349741\n  512293\n    512294\n    1131822\n    1262691\n    1263034\n  1131336\n  1574264\n  1574265\n  1638783\n  1679444\n  1755639\n  1896967\n\n\n\n\n\n\n\nRemoving indent. The list could be used to extract sequences from BLAST database with \nblastdbcmd\n (see \ntutorial\n)\n\n\n$ taxonkit list --nodes nodes.dmp --ids 9605,239934 --indent \"\"\n9605\n9606\n63221\n741158\n1425170\n\n239934\n239935\n349741\n512293\n512294\n1131822\n1262691\n1263034\n1131336\n1574264\n1574265\n1638783\n1679444\n1755639\n1896967\n\n\n\nPerformance:\n Time and memory usage for whole taxon tree:\n\n\n$ # emptying the buffers cache\n$ su -c \"free \n sync \n echo 3 \n /proc/sys/vm/drop_caches \n free\"\n\n$ memusg -t taxonkit list --nodes nodes.dmp --ids 1 --indent \"\" \n t0.txt\nelapsed time: 2.987s\npeak rss: 82.79 MB\n\n\n\n\n\n\n\nAdding names\n\n\n$ taxonkit list --nodes nodes.dmp --names names.dmp --ids 9605,239934\n9605 [genus] Homo\n  9606 [species] Homo sapiens\n    63221 [subspecies] Homo sapiens neanderthalensis\n    741158 [subspecies] Homo sapiens ssp. Denisova\n  1425170 [species] Homo heidelbergensis\n\n239934 [genus] Akkermansia\n  239935 [species] Akkermansia muciniphila\n    349741 [no rank] Akkermansia muciniphila ATCC BAA-835\n  512293 [no rank] environmental samples\n    512294 [species] uncultured Akkermansia sp.\n    1131822 [species] uncultured Akkermansia sp. SMG25\n    1262691 [species] Akkermansia sp. CAG:344\n    1263034 [species] Akkermansia muciniphila CAG:154\n  1131336 [species] Akkermansia sp. KLE1605\n  1574264 [species] Akkermansia sp. KLE1797\n  1574265 [species] Akkermansia sp. KLE1798\n  1638783 [species] Akkermansia sp. UNK.MGS-1\n  1679444 [species] Akkermansia glycaniphila\n  1755639 [species] Akkermansia sp. MC_55\n  1896967 [species] Akkermansia sp. 54_46\n\n\n\nPerformance:\n Time and memory usage for whole taxon tree:\n\n\n$ # emptying the buffers cache\n$ su -c \"free \n sync \n echo 3 \n /proc/sys/vm/drop_caches \n free\"\n\n$ memusg -t taxonkit list --nodes nodes.dmp --names names.dmp --ids 1 \n t1.txt\nelapsed time: 9.825s\npeak rss: 648.65 MB\n\n\n\n\n\n\n\nOutput in JSON format, so you can easily collapse and uncollapse taxonomy tree in modern text editor.\n\n\n$ taxonkit list --nodes nodes.dmp --names names.dmp --ids 9605,239934 --json\n{\n  \"9605 [genus] Homo\": {\n    \"9606 [species] Homo sapiens\": {\n      \"63221 [subspecies] Homo sapiens neanderthalensis\": {},\n      \"741158 [subspecies] Homo sapiens ssp. Denisova\": {}\n    }\n    \"1425170 [species] Homo heidelbergensis\": {}\n  },\n  \"239934 [genus] Akkermansia\": {\n    \"239935 [species] Akkermansia muciniphila\": {\n      \"349741 [no rank] Akkermansia muciniphila ATCC BAA-835\": {}\n    }\n    \"512293 [no rank] environmental samples\": {\n      \"512294 [species] uncultured Akkermansia sp.\": {},\n      \"1131822 [species] uncultured Akkermansia sp. SMG25\": {},\n      \"1262691 [species] Akkermansia sp. CAG:344\": {},\n      \"1263034 [species] Akkermansia muciniphila CAG:154\": {}\n    }\n    \"1131336 [species] Akkermansia sp. KLE1605\": {},\n    \"1574264 [species] Akkermansia sp. KLE1797\": {},\n    \"1574265 [species] Akkermansia sp. KLE1798\": {},\n    \"1638783 [species] Akkermansia sp. UNK.MGS-1\": {},\n    \"1679444 [species] Akkermansia glycaniphila\": {},\n    \"1755639 [species] Akkermansia sp. MC_55\": {},\n    \"1896967 [species] Akkermansia sp. 54_46\": {}\n  }\n}\n\n\n\nSnapshot of taxonomy (taxid 1) in kate:\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.\n*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/\n/*\nvar disqus_config = function () {\nthis.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable\nthis.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable\n};\n*/\n(function() { // DON'T EDIT BELOW THIS LINE\nvar d = document, s = d.createElement('script');\ns.src = '//taxonkit.disqus.com/embed.js';\ns.setAttribute('data-timestamp', +new Date());\n(d.head || d.body).appendChild(s);\n})();\n\n\n\n\nPlease enable JavaScript to view the \ncomments powered by Disqus.", 
            "title": "Usage"
        }, 
        {
            "location": "/usage/#usage-and-examples", 
            "text": "", 
            "title": "Usage and Examples"
        }, 
        {
            "location": "/usage/#before-use", 
            "text": "Please download and uncompress these files:   ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz", 
            "title": "Before use"
        }, 
        {
            "location": "/usage/#taxonkit", 
            "text": "Usage  TaxonKit - NCBI Taxonomy Toolkit\n\nVersion: 0.1.1\n\nAuthor: Wei Shen  shenwei356@gmail.com \n\nSource code: https://github.com/shenwei356/taxonkit\n\nDataset:\n\n    Please download and uncompress these files:\n    ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz\n\nUsage:\n  TaxonKit [command]\n\nAvailable Commands:\n  list        list taxon tree of given taxon IDs\n  version     print version information and check for update\n\nFlags:\n  -o, --out-file string   out file ( -  for stdout, suffix .gz for gzipped out) (default  - )\n  -j, --threads int       number of CPUs. (default value: 1 for single-CPU PC, 2 for others) (default 2)\n\nUse  TaxonKit [command] --help  for more information about a command.", 
            "title": "taxonkit"
        }, 
        {
            "location": "/usage/#list", 
            "text": "Usage  list taxon tree of given taxon IDs\n\nUsage:\n  taxonkit list [flags]\n\nFlags:\n      --ids string      taxon ID(s), multiple IDs should be seperated by comma (default  1 )\n      --indent string   indent (default     )\n      --json            output in JSON format. you can save the result in file with suffix  .json  and open with modern text editor\n      --names string    names.dmp file, when it given taxid will be followed by its scientific name\n      --nodes string    nodes.dmp file (default  nodes.dmp )  Examples    Default usage  $ taxonkit list --nodes nodes.dmp --ids 9605,239934\n9605\n  9606\n    63221\n    741158\n  1425170\n\n239934\n  239935\n    349741\n  512293\n    512294\n    1131822\n    1262691\n    1263034\n  1131336\n  1574264\n  1574265\n  1638783\n  1679444\n  1755639\n  1896967    Removing indent. The list could be used to extract sequences from BLAST database with  blastdbcmd  (see  tutorial )  $ taxonkit list --nodes nodes.dmp --ids 9605,239934 --indent \"\"\n9605\n9606\n63221\n741158\n1425170\n\n239934\n239935\n349741\n512293\n512294\n1131822\n1262691\n1263034\n1131336\n1574264\n1574265\n1638783\n1679444\n1755639\n1896967  Performance:  Time and memory usage for whole taxon tree:  $ # emptying the buffers cache\n$ su -c \"free   sync   echo 3   /proc/sys/vm/drop_caches   free\"\n\n$ memusg -t taxonkit list --nodes nodes.dmp --ids 1 --indent \"\"   t0.txt\nelapsed time: 2.987s\npeak rss: 82.79 MB    Adding names  $ taxonkit list --nodes nodes.dmp --names names.dmp --ids 9605,239934\n9605 [genus] Homo\n  9606 [species] Homo sapiens\n    63221 [subspecies] Homo sapiens neanderthalensis\n    741158 [subspecies] Homo sapiens ssp. Denisova\n  1425170 [species] Homo heidelbergensis\n\n239934 [genus] Akkermansia\n  239935 [species] Akkermansia muciniphila\n    349741 [no rank] Akkermansia muciniphila ATCC BAA-835\n  512293 [no rank] environmental samples\n    512294 [species] uncultured Akkermansia sp.\n    1131822 [species] uncultured Akkermansia sp. SMG25\n    1262691 [species] Akkermansia sp. CAG:344\n    1263034 [species] Akkermansia muciniphila CAG:154\n  1131336 [species] Akkermansia sp. KLE1605\n  1574264 [species] Akkermansia sp. KLE1797\n  1574265 [species] Akkermansia sp. KLE1798\n  1638783 [species] Akkermansia sp. UNK.MGS-1\n  1679444 [species] Akkermansia glycaniphila\n  1755639 [species] Akkermansia sp. MC_55\n  1896967 [species] Akkermansia sp. 54_46  Performance:  Time and memory usage for whole taxon tree:  $ # emptying the buffers cache\n$ su -c \"free   sync   echo 3   /proc/sys/vm/drop_caches   free\"\n\n$ memusg -t taxonkit list --nodes nodes.dmp --names names.dmp --ids 1   t1.txt\nelapsed time: 9.825s\npeak rss: 648.65 MB    Output in JSON format, so you can easily collapse and uncollapse taxonomy tree in modern text editor.  $ taxonkit list --nodes nodes.dmp --names names.dmp --ids 9605,239934 --json\n{\n  \"9605 [genus] Homo\": {\n    \"9606 [species] Homo sapiens\": {\n      \"63221 [subspecies] Homo sapiens neanderthalensis\": {},\n      \"741158 [subspecies] Homo sapiens ssp. Denisova\": {}\n    }\n    \"1425170 [species] Homo heidelbergensis\": {}\n  },\n  \"239934 [genus] Akkermansia\": {\n    \"239935 [species] Akkermansia muciniphila\": {\n      \"349741 [no rank] Akkermansia muciniphila ATCC BAA-835\": {}\n    }\n    \"512293 [no rank] environmental samples\": {\n      \"512294 [species] uncultured Akkermansia sp.\": {},\n      \"1131822 [species] uncultured Akkermansia sp. SMG25\": {},\n      \"1262691 [species] Akkermansia sp. CAG:344\": {},\n      \"1263034 [species] Akkermansia muciniphila CAG:154\": {}\n    }\n    \"1131336 [species] Akkermansia sp. KLE1605\": {},\n    \"1574264 [species] Akkermansia sp. KLE1797\": {},\n    \"1574265 [species] Akkermansia sp. KLE1798\": {},\n    \"1638783 [species] Akkermansia sp. UNK.MGS-1\": {},\n    \"1679444 [species] Akkermansia glycaniphila\": {},\n    \"1755639 [species] Akkermansia sp. MC_55\": {},\n    \"1896967 [species] Akkermansia sp. 54_46\": {}\n  }\n}  Snapshot of taxonomy (taxid 1) in kate:     \n\n/**\n*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.\n*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/\n/*\nvar disqus_config = function () {\nthis.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable\nthis.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable\n};\n*/\n(function() { // DON'T EDIT BELOW THIS LINE\nvar d = document, s = d.createElement('script');\ns.src = '//taxonkit.disqus.com/embed.js';\ns.setAttribute('data-timestamp', +new Date());\n(d.head || d.body).appendChild(s);\n})();  Please enable JavaScript to view the  comments powered by Disqus.", 
            "title": "list"
        }, 
        {
            "location": "/tutorial/", 
            "text": "Tutorial\n\n\nExtract all sequences of certen taxons from the nr database\n\n\nDataset\n\n\n\n\nprot.accession2taxid.gz\n\n\n\n\nSteps\n\n\nTaking virus for example.\n\n\n\n\n\n\nGetting all taxids of virus (taxid 10239):\n\n\n$ taxonkit list --nodes nodes.dmp --ids 10239 --indent \"\" \n virus.taxid.txt\n\n\n\nIt takes only 2.5s! Number of taxids:\n\n\n$ wc -l virus.taxid.txt\n163104 virus.taxid.txt\n\n\n\n\n\n\n\nExtacting accessions or GIs with \ncsvtk\n:\n\n\n\n\n\n\naccession\n\n\n$ zcat prot.accession2taxid.gz | \\\n    csvtk -t grep -f taxid -P virus.taxid.txt | \\\n    csvtk -t cut -f accession.version \n virus.taxid.acc.txt\n\n\n\n\n\n\n\ngi\n\n\n$ zcat prot.accession2taxid.gz | \\\n    csvtk -t grep -f taxid -P virus.taxid.txt | \\\n    csvtk -t cut -f gi \n virus.taxid.gi.txt\n\n\n\nIt costs 8 min\n\n\n\n\n\n\n\n\n\n\nExtracting nr sequences:\n\n\n\n\n\n\naccesion\n\n\n$ blastdbcmd -db nr -entry all -outfmt \"%a\\t%T\" | \\\n    csvtk -t grep -f 2 -P virus.taxid.acc.txt | \\\n    csvtk -t cut -f 1 | \\\n    blastdbcmd -db nr -entry_batch - -out nr.virus.fa\n\n\n\n\n\n\n\ngi\n\n\n$ blastdbcmd -db nr -entry all -outfmt \"%g\\t%T\" | \\\n    csvtk -t grep -f 2 -P virus.taxid.gi.txt | \\\n    csvtk -t cut -f 1 | \\\n    blastdbcmd -db nr -entry_batch - -out nr.virus.fa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.\n*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/\n/*\nvar disqus_config = function () {\nthis.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable\nthis.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable\n};\n*/\n(function() { // DON'T EDIT BELOW THIS LINE\nvar d = document, s = d.createElement('script');\ns.src = '//taxonkit.disqus.com/embed.js';\ns.setAttribute('data-timestamp', +new Date());\n(d.head || d.body).appendChild(s);\n})();\n\n\n\n\nPlease enable JavaScript to view the \ncomments powered by Disqus.", 
            "title": "Tutorial"
        }, 
        {
            "location": "/tutorial/#tutorial", 
            "text": "", 
            "title": "Tutorial"
        }, 
        {
            "location": "/tutorial/#extract-all-sequences-of-certen-taxons-from-the-nr-database", 
            "text": "", 
            "title": "Extract all sequences of certen taxons from the nr database"
        }, 
        {
            "location": "/tutorial/#dataset", 
            "text": "prot.accession2taxid.gz", 
            "title": "Dataset"
        }, 
        {
            "location": "/tutorial/#steps", 
            "text": "Taking virus for example.    Getting all taxids of virus (taxid 10239):  $ taxonkit list --nodes nodes.dmp --ids 10239 --indent \"\"   virus.taxid.txt  It takes only 2.5s! Number of taxids:  $ wc -l virus.taxid.txt\n163104 virus.taxid.txt    Extacting accessions or GIs with  csvtk :    accession  $ zcat prot.accession2taxid.gz | \\\n    csvtk -t grep -f taxid -P virus.taxid.txt | \\\n    csvtk -t cut -f accession.version   virus.taxid.acc.txt    gi  $ zcat prot.accession2taxid.gz | \\\n    csvtk -t grep -f taxid -P virus.taxid.txt | \\\n    csvtk -t cut -f gi   virus.taxid.gi.txt  It costs 8 min      Extracting nr sequences:    accesion  $ blastdbcmd -db nr -entry all -outfmt \"%a\\t%T\" | \\\n    csvtk -t grep -f 2 -P virus.taxid.acc.txt | \\\n    csvtk -t cut -f 1 | \\\n    blastdbcmd -db nr -entry_batch - -out nr.virus.fa    gi  $ blastdbcmd -db nr -entry all -outfmt \"%g\\t%T\" | \\\n    csvtk -t grep -f 2 -P virus.taxid.gi.txt | \\\n    csvtk -t cut -f 1 | \\\n    blastdbcmd -db nr -entry_batch - -out nr.virus.fa       \n\n/**\n*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.\n*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/\n/*\nvar disqus_config = function () {\nthis.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable\nthis.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable\n};\n*/\n(function() { // DON'T EDIT BELOW THIS LINE\nvar d = document, s = d.createElement('script');\ns.src = '//taxonkit.disqus.com/embed.js';\ns.setAttribute('data-timestamp', +new Date());\n(d.head || d.body).appendChild(s);\n})();  Please enable JavaScript to view the  comments powered by Disqus.", 
            "title": "Steps"
        }, 
        {
            "location": "/bioinf/", 
            "text": "", 
            "title": "Wei Shen's Bioinformatic tools"
        }
    ]
}